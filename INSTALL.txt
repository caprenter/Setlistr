===Setlistr Installation===

==Files==
Place all the files on your webserver.

==Database==
Set up a MySQL database and import the database set up files from the /db directory.

==Configuration==
=example.settings.php=
Make a copy of example.settings.php and rename it settings.php
Edit settings.php to:
 - Reflect your server document root
 - Update the database connection information
 - There is also a site email setting which is used in password recovery (new_pass.php)
 - And a default list id for the API demo page (/api/show.php)
 - Set a 'site salt'. Passwords by default are salted with a both a site salt and a randomly generated string.
 - Set a time zone
 - Set your Google Analytics code

=Offline Message=
If the site fails to connect to the database, then it will redirect to offline.php
Copy example.offline.php to offline.php to set up the default page, or customise your own.
To receive the mysql error report edit the lines in the flexibleAccess function in access.class.beta.php

=.htaccess=
You might want to visit the settings in the .htaccess file.

=User Passwords=
User passwords are generated and salted in phpUserClass/access.class.beta.php
If you wish, in phpUserClass/access.class.beta.php you can alter the way site passwords are generated and encrypted.

=Javascript=
The 'edit in place' javascript function for the editing of set list titles, requires a path to the file:
functions/updateTitle.php 
to be hardcoded.
To handles this we insert the value into:
javascript/script.js
when we call it in the footer.

=Google Analytics=
Google Analytics tracking javascript is placed in theme/footer.php
Add your account details in settings.php


==Site Maintenance==
=Clean up=
When anyone visits the site, a new list is generated. 
To clean up old lists, set up a cron job to visit 
clean_up_routine.php
By default this is set to remove lists, and tracks, assigned to user 0, that are older than 2 hours.

==Updating Setlistr==
If you decide to pull files from the GitHub repository you should not get any conflicts.
